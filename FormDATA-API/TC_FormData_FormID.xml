<?xml version="1.0" encoding="UTF-8"?>
<con:testCase id="8ad8df59-41fc-4f64-a163-3458a9a4930c" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="TC_FormData_FormID" searchProperties="true" xmlns:con="http://eviware.com/soapui/config"><con:settings><con:setting id="8ad8df59-41fc-4f64-a163-3458a9a4930cfileName">TC_FormData_FormID</con:setting></con:settings><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="datasource" name="FormData_DS1" id="1ebc9de5-b2b2-4cfe-8421-3f49c891f9e4"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><check>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">true&lt;/con:entry></check><row>&lt;xml-fragment>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">450&lt;/con:entry>&lt;con:entry xmlns:con="http://eviware.com/soapui/config"/>&lt;/xml-fragment></row></con:configuration></con:dataSource><con:property>FormID</con:property><con:completeLastOperation>true</con:completeLastOperation><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="restrequest" name="GET_FormData_FormID" id="c1edf72c-d3dc-412f-a24f-4d061e9321c1"><con:settings/><con:config service="REST Service 3" resourcePath="/formdataservice/services/v1/form/${FormData_DS1#FormID}" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET_FormData_FormID" id="d3418fb4-db61-4a67-84b2-33e1bbded2bb" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://mavdv-ccpts-03.curaspan.local</con:endpoint><con:request/><con:originalUri>http://mavdv-ccpts-03.curaspan.local/formdataservice/services/v1/form/</con:originalUri><con:assertion type="Simple Contains" id="6ae7088b-f5ea-464b-8c88-752b784fa02a" name="Contains"><con:configuration><token>${FormData_DS1#FormID}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" id="e50952ab-3fa5-49be-89f9-3b3161da7081" name="XPath Match"><con:configuration><path>declare namespace ns1='http://mavdv-ccpts-03.curaspan.local/formdataservice/services/v1/form/';
//ns1:Response[1]/ns1:id[1]</path><content>${FormData_DS1#FormID}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="fe5cd340-6c0b-4b4b-be41-53a0cce24e72" name="Script Assertion"><con:configuration><scriptText>import com.gmongo.GMongoClient
import com.mongodb.MongoClient
import com.gmongo.GMongo
import com.mongodb.DBCursor
import com.mongodb.MongoCredential
import com.mongodb.ServerAddress
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import com.eviware.soapui.model.iface.*
import groovy.json.JsonSlurper

def dbUser = context.expand( '${#Project#User}' )
def dbPassword = context.expand( '${#Project#Password}' )
def dbServer = context.expand( '${#Project#Server}' )
def dbDatabase = context.expand( '${#Project#Database}' )

def credentials = MongoCredential.createCredential(dbUser, dbDatabase, dbPassword as char[])

def mongoClient =  new MongoClient( new ServerAddress(dbServer), Arrays.asList(credentials) )
context.gmongo = new GMongo( mongoClient )
context.mongoDB = context.gmongo.getDB(dbDatabase)
log.info("Connection Successfull")

def dbMongo_id = context.mongoDB.form.find([_id:[$exists:true]]).toArray()
def id_count = dbMongo_id.size()
def response = context.expand( '${GET_FormData_FormID#Response}' ).toString()


def json = new JsonSlurper().parseText(response)



for(int i=0;i&lt;5;i++){

	if(dbMongo_id[i]._id==json.id){
	assert dbMongo_id[i].name == json.name	
	assert dbMongo_id[i].active == json.active
	assert dbMongo_id[i].uri == json.uri	
	}
	
}

log.info("Assertion successful")</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop" id="7ee614ca-520e-4665-95f8-3b05dad98c77"><con:settings/><con:config><dataSourceStep>FormData_DS1</dataSourceStep><targetStep>GET_FormData_FormID</targetStep></con:config></con:testStep><con:testStep type="groovy" name="checkMongo_Script" id="c1e4faca-06f2-455f-be6c-42ee61481a27"><con:settings/><con:config><script>import com.gmongo.GMongoClient
import com.mongodb.MongoClient
import com.gmongo.GMongo
import com.mongodb.MongoCredential
import com.mongodb.ServerAddress
import groovy.json.JsonSlurper
/*def dbUser = 'fduser'
def dbPassword = 'password1'
def dbServer = 'db-mongodev.curaspan.local'
def dbDatabase = 'forms'
*/
/*def dbUser = testRunner.testCase.testSuite.project.getPropertyValue("User")
def dbPassword = testRunner.testCase.testSuite.project.getPropertyValue("Password")
def dbServer = testRunner.testCase.testSuite.project.getPropertyValue("Server")

def dbDatabase = testRunner.testCase.testSuite.project.getPropertyValue("Database")
*/
def dbUser = context.expand( '${#Project#User}' )
def dbPassword = context.expand( '${#Project#Password}' )
def dbServer = context.expand( '${#Project#Server}' )
def dbDatabase = context.expand( '${#Project#Database}' )
//log.info(fixed)
//def dbDatabase = fixed("Database")
//Connection to Mongo DB 
def credentials = MongoCredential.createCredential(dbUser, dbDatabase, dbPassword as char[])

def mongoClient =  new MongoClient( new ServerAddress(dbServer), Arrays.asList(credentials) )
context.gmongo = new GMongo( mongoClient )
context.mongoDB = context.gmongo.getDB(dbDatabase)
log.info("Successfull")



def dbMongo = context.mongoDB.form.find([_id:[$exists:true]]).toArray()
log.info dbMongo[0]
def response = context.expand( '${GET_FormData_FormID#Response#$[\'id\']}' )
log.info response
//def response = context.expand( '${GettingDataFromAPI#Response#$[\'id\']}' )

assert dbMongo[0]._id == response
log.info "Assertions Successfull"
assert dbMongo[0].name == "Patient Information Form"
//assert dbMongo[0].active == true
def response1 = context.expand( '${GET_FormData_FormID#Response#$[\'uri\']}' )
assert dbMongo[0].uri == response1
def response2 = context.expand( '${GET_FormData_FormID#Response#$[\'page\']}' )
log.info response2
//assert dbMongo[0].page ==  response2:"Failedyes"
//assert dbMongo[0].formFieldMap == 'normal_list'
log.info "Assertions Successfull"
//def id = context.expand( '${GettingDataFromAPI#id}' )

</script></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>1ebc9de5-b2b2-4cfe-8421-3f49c891f9e4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>7ee614ca-520e-4665-95f8-3b05dad98c77</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c1edf72c-d3dc-412f-a24f-4d061e9321c1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase>